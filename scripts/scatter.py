# This script generates the scatter plot of RQ3
# Input files are generated by boxplot_cs.py & boxplot_java.py

import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('seaborn-whitegrid')
from matplotlib.ticker import FuncFormatter


def thousands(x, pos):
    return '%1.0fK' % (x * 1e-3) if x >0 else '0'

# Column of csv: Project Name, Count packages, Sum LOC, Average LOC, Pareto category, Language
df = pd.read_csv(r'/path/data/results/boxplot.csv')

fig, ax = plt.subplots()
df_cs = df[df['Language'] == 'cs']
df_java = df[df['Language'] == 'Java']

ax.scatter( x=df_cs['Pareto_category'], y=df_cs['Sum_LOC'], s=df_cs['Sum_LOC']/500,
                       alpha=0.2, c='#1a5276', label=None)
ax.scatter( x=df_java['Pareto_category'], y=df_java['Sum_LOC'], s=df_java['Sum_LOC']/500,
                       alpha=0.2, c='#b03a2e', label=None)


ax.scatter([], [], label='Java', c='#b03a2e', s=30)
ax.scatter([], [], label='C#', c= '#1a5276', s=30)

ax.set_xticklabels(['','10-90', '20-80', '30-70', '40-60', '50-50', '60-40'])
formatter = FuncFormatter(thousands)
ax.yaxis.set_major_formatter(formatter)
ax.set_xlabel('Pareto category')
ax.set_ylabel('LOC')
ax.set_ylim(0,1000000)
lgnd = plt.legend()


plt.savefig(r'/path/scatter.pdf')
plt.show()
